@using System.Text.Json

<RadzenTemplateForm TItem="CreateBoxDto" Data=@createBoxDto Submit=@OnSubmit InvalidSubmit=@OnInvalidSubmit>
    <RadzenStack Gap="1rem">
        <RadzenFormField Text="Ubicación" Variant="@variant">
            <ChildContent>
                <RadzenTextBox Name="Location" @bind-Value=@createBoxDto.Location Style="border: 1px solid;"/>
            </ChildContent>
            <Helper>
                <RadzenText TextStyle="TextStyle.Caption">* campo requerido</RadzenText>
                <RadzenRequiredValidator Component="Location" Text="La ubicacion es obligatoria." />
            </Helper>
        </RadzenFormField>

        <RadzenStack Orientation="Orientation.Horizontal" JustifyContent="JustifyContent.SpaceBetween" Gap="1rem" class="rz-mt-8">
            <RadzenButton ButtonType="ButtonType.Submit" Size="ButtonSize.Medium" Icon="save" Text="Guardar" />
            <RadzenButton ButtonStyle="ButtonStyle.Light" Variant="Variant.Flat" Size="ButtonSize.Medium" Icon="cancel" Text="Cancelar" Click="@Cancel" />
        </RadzenStack>
    </RadzenStack>
</RadzenTemplateForm>



@code {

    Variant variant = Variant.Filled;

    class CreateBoxDto
    {
        public string Location { get; set; } = string.Empty;
    }

    CreateBoxDto createBoxDto = new();

    void OnSubmit(CreateBoxDto createBoxDto)
    {
        Console.WriteLine($"Submit: {JsonSerializer.Serialize(createBoxDto, new JsonSerializerOptions() { WriteIndented = true })}");
    }

    void OnInvalidSubmit(FormInvalidSubmitEventArgs args)
    {
        Console.WriteLine($"InvalidSubmit: {JsonSerializer.Serialize(args, new JsonSerializerOptions() { WriteIndented = true })}");
    }

    void Cancel()
    {
        
    }
}
