@using TodoSeUsa.BlazorServer.Helpers

<RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" Gap="1.5rem" Wrap="FlexWrap.Wrap">
    <RadzenButton Text="Resetear filtros" Click="@OnClicked" Icon="refresh" />
    <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" Gap="0.5rem" Wrap="FlexWrap.Wrap">
        <RadzenLabel Text="Filtro lógico: " Component="operator" />
        <RadzenDropDown @bind-Value="LogicalFilterValue"
                        TextProperty="Text"
                        ValueProperty="Value"
                        Name="operator"
                        Data="@Data"
                        Change="@LogicalFilterOnChange" />
    </RadzenStack>
</RadzenStack>

@code{
    [Parameter] public EventCallback ResetButtonClicked { get; set; }

    [Parameter] public LogicalFilterOperator LogicalFilterValue { get; set; }
    [Parameter] public EventCallback<LogicalFilterOperator> LogicalFilterValueChanged { get; set; }
    [Parameter] public EventCallback LogicalFilterOnChanged { get; set; }

    private IEnumerable<object> Data { get; set; } = RadzenFilteringHelpers.LogicalOperators;


    private async Task LogicalFilterOnChange(object? args)
    {
        await LogicalFilterValueChanged.InvokeAsync(LogicalFilterValue);
        await LogicalFilterOnChanged.InvokeAsync();
    }

    private async Task OnClicked()
    {
        await ResetButtonClicked.InvokeAsync();
    }
}